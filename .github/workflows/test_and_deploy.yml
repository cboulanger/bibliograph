name: Bibliograph Tests & Deployment
on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
jobs:
  run_tests:
    name: Run tests & deploy to demo.bibliograph.org
    runs-on: ubuntu-latest
    if: "!(github.event.head_commit && contains(github.event.head_commit.message, 'skip ci'))"
    services:
      mysql_server:
        image: mariadb:latest
        ports:
          - 3306
        env:
          MYSQL_USER: bibliograph
          MYSQL_PASSWORD: bibliograph
          MYSQL_DATABASE: tests
          MYSQL_ROOT_PASSWORD: bibliograph
        options: --name=mysql_server --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
      http_server:
        image: cboulanger/docker-phpfarm
        ports:
          - 8070:8070
          - 8071:8071
          - 8072:8072
          - 8073:8073
          - 8074:8074
        options: --name=http_server
        volumes:
          - /home/runner/work/bibliograph:/github/workspace
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Mount workspace dirs into /var/www of http service container
        run: docker exec http_server ln -s /github/workspace/bibliograph/{compiled,dist,src,test} /var/www
      - name: Check Services
        env:
          DB_HOST_GITHUB: 127.0.0.1
          DB_PORT_GITHUB: ${{ job.services.mysql_server.ports[3306] }}
        run: tool/env/services-test
      - name: Setup Node
        uses: actions/setup-node@v1
      - name: Install Prerequisites
        run: tool/env/install
      - name: Run Tests
        if: "!(github.event.head_commit && contains(github.event.head_commit.message, 'skip tests'))"
        env:
          DB_HOST_GITHUB: 127.0.0.1
          DB_PORT_GITHUB: ${{ job.services.mysql_server.ports[3306] }}
        run: |
          echo "skipping test..."
#          tool/test/codeception
# might be replaced with https://github.com/pickware/github-action-ssh-agent
      - name: Setup SSH
        env:
          SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_KEYFILE: ${{ secrets.SSH_KEYFILE }}
          SSH_CONFIG: ${{ secrets.SSH_CONFIG }}
        run: |
          mkdir ~/.ssh
          echo "$SSH_CONFIG" > ~/.ssh/config
          touch $SSH_KEYFILE
          chmod 0600 $SSH_KEYFILE
          echo "$SSH_KEY" > $SSH_KEYFILE
          sudo apt-get install -y expect
          tool/deploy/start-ssh-agent $SSH_KEYFILE
      - name: Deploy
        env:
          DB_ROOT_USER: ${{ secrets.DB_ROOT_USER }}
          DB_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          TESTING_ENV: ${{ secrets.TESTING_ENV }}
          TESTING_TOML: ${{ secrets.TESTING_TOML }}
        if: "!(github.event.head_commit && contains(github.event.head_commit.message, 'skip deploy'))"
        run: |
          echo "$TESTING_ENV" > $HOME/testing.env
          echo "$TESTING_TOML" > $HOME/testing.toml
          tool/deploy/deploy \
            --env-file .github/workflows/testing-github-build.env \
            --verbose \
            --build-in-debug-mode \
            --yes \
            --create-user \
            --empty-database
