#!/usr/bin/env bash
# controls the apache-php server in the docker-phpfarm container

PHPFARM_PORTS=${PHPFARM_PORTS:-'8071 8072 8073 8074 8080'}

source tool/env/check

start_httpd() {
  if [ "$(docker ps -f name=http_server -q -a)" == "" ]; then
    echo ">>> Starting apache/php server in docker container ..."
    publishOption=''
    for port in $PHPFARM_PORTS; do
      publishOption="$publishOption -p ${port}:${port}"
    done
    docker run --name http_server \
      -v $PWD:/var/www:delegated \
      -e APACHE_UID=$UID \
      $publishOption \
      --detach \
      cboulanger/docker-phpfarm \
      > /dev/null
  else
    echo ">>> Restarting apache/php server ..."
    docker start http_server > /dev/null
  fi
  if [ $? != 0 ]; then
    >&2 echo 'ERROR: http server could not be started.'
    exit 1
  fi
  [ -d $PWD/data/docker/http ] || mkdir -p $PWD/data/docker/http

  echo "Server started."
  docker logs -f http_server &> $PWD/log/http/combined.log &
}

stop_httpd() {
  echo ">>> Stopping http server..."
  docker stop http_server > /dev/null
  docker rm http_server > /dev/null
  if [ $? != 0 ]; then
    >&2 echo 'ERROR: http server could not be stopped.'
    exit 1
  fi
  echo "Server stopped."
}

case $1 in
  start)
    start_httpd
    ;;
  stop)
    stop_httpd
    ;;
  restart)
    stop_httpd
    start_httpd
    ;;
  status)
    # This only checks if the server containter is running,
    # there is currently no check if the server is actually running inside container
    if [ "$(docker ps -f name=http_server -q -a)" != "" ]; then
      echo "Server container is running."
    else
      echo "Server container is not running."
    fi
    ;;
  *)
    echo "Syntax: tool/env/http_server (start|stop|restart|status)"
esac
